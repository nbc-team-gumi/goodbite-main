on:
  push:
    branches: [ 175-feat-https-리디렉션 ]

env:
  DOCKER_IMAGE_TAG_NAME: good-bite

jobs:
  build-and-docker-push:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Decode keystore and save
        run: echo "${{ secrets.PKCS12_BASE64 }}" | base64 --decode > src/main/resources/api.goodbite.site.p12

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        env:
          DB_USERNAME: ${{ vars.DB_USERNAME }}
          DB_PASSWORD: ${{ vars.DB_PASSWORD }}
          DB_HOST: ${{ vars.DB_HOST }}
          DB_NAME: ${{ vars.DB_NAME }}
          DB_PORT: ${{ vars.DB_PORT }}
          JWT_SECRET_KEY: ${{ vars.JWT_SECRET_KEY }}
          PUBLIC_DATA_KEY: ${{ secrets.PUBLIC_DATA_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          DOMAIN_URL: ${{ vars.DOMAIN_URL }}
          SUBDOMAIN_URL: ${{ vars.SUBDOMAIN_URL }}
          KAKAO_API_KEY: ${{ secrets.KAKAO_API_KEY }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          S3_REGION: ${{ secrets.S3_REGION }}
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
          REDIS_SERVER: ${{ secrets.REDIS_SERVER }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS_PORT: $${{ secrets.REDIS_PORT }}
          SSL_KEY: ${{ secrets.SSL_KEY }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_TAG_NAME }}:latest

  deploy-to-ec2:
    needs: build-and-docker-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ vars.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo usermod -aG docker $USER
            newgrp docker
            
            echo "${{ secrets.PKCS12_BASE64 }}" | base64 --decode > /home/ubuntu/goodbite/api.goodbite.site.p12

            # 권한 설정
            sudo chmod 600 /home/ubuntu/goodbite/api.goodbite.site.p12
            
            CONTAINER_ID=$(sudo docker ps -q --filter "publish=443-443")
            
            if [ ! -z "$CONTAINER_ID" ]; then
            sudo docker stop $CONTAINER_ID
            sudo docker rm $CONTAINER_ID
            fi
            
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_TAG_NAME }}:latest
            
            sudo docker run -d -p 443:443 \
                -e DB_USERNAME=${{vars.DB_USERNAME}} \
                -e DB_PASSWORD=${{vars.DB_PASSWORD}} \
                -e DB_HOST=${{vars.DB_HOST}} \
                -e DB_NAME=${{vars.DB_NAME}} \
                -e DB_PORT=${{vars.DB_PORT}} \
                -e JWT_SECRET_KEY=${{vars.JWT_SECRET_KEY}} \
                -e PUBLIC_DATA_KEY=${{ secrets.PUBLIC_DATA_KEY }} \
                -e DOMAIN_URL=${{ vars.DOMAIN_URL }} \
                -e SUBDOMAIN_URL=${{ vars.SUBDOMAIN_URL }} \
                -e EC2_HOST=${{ secrets.EC2_HOST }} \
                -e KAKAO_API_KEY=${{ secrets.KAKAO_API_KEY }} \
                -e S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} \
                -e S3_REGION=${{ secrets.S3_REGION }} \
                -e S3_ACCESS_KEY=${{ secrets.S3_ACCESS_KEY }} \
                -e S3_SECRET_KEY=${{ secrets.S3_SECRET_KEY }} \
                -e REDIS_SERVER=${{ secrets.REDIS_SERVER }} \
                -e REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} \
                -e REDIS_PORT=${{ secrets.REDIS_PORT }} \
                -e SSL_KEY=${{secrets.SSL_KEY}} \
                -v /home/ubuntu/goodbite/api.goodbite.site.p12:/path/inside/container/api.goodbite.site.p12 \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_TAG_NAME }}:latest