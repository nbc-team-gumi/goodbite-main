name: Java Lint Check

on:
  pull_request:
    types: [opened, synchronize, reopened] # 처음 생성시점(opened), 커밋 추가/변경 시점(synchronize), 닫힌 PR 재오픈 시점(reopened)
    branches:
      - main
      - dev

jobs:
  lint:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Install dependencies
        run: ./gradlew build -x test

      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Run Checkstyle
        id: checkstyle
        continue-on-error: true
        run: ./gradlew checkstyleMain

      - name: Upload Checkstyle Report as Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: build/reports/checkstyle/goodbite-checkstyle-result.html

      - name: Deploy to GitHub Pages
        if: success() || failure()
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git fetch origin gh-pages
          git checkout gh-pages

          cp build/reports/checkstyle/goodbite-checkstyle-result.html index.html

          git add index.html
          git commit -m "📋 docs: Report Checkstyle results in HTML"
          git push origin gh-pages

      - name: Parse Checkstyle Summary
        id: parse_checkstyle
        if: success() || failure()
        run: |
          FILE="build/reports/checkstyle/goodbite-checkstyle-result.xml"
          TOTAL_FILES=$(xmllint --xpath "count(//file)" $FILE)
          TOTAL_VIOLATIONS=$(xmllint --xpath "count(//error)" $FILE)
          FILES_WITH_VIOLATIONS=$(xmllint --xpath "count(//file[error])" $FILE)
          GITHUB_PAGES_URL="https://nbc-team-gumi.github.io/goodbite-main/"

          echo "# 🔍 Checkstyle Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Summary" >> $GITHUB_STEP_SUMMARY
          echo "| **Metric**            | **Value**     |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------------------|---------------|" >> $GITHUB_STEP_SUMMARY
          echo "| Total files checked   | $TOTAL_FILES  |" >> $GITHUB_STEP_SUMMARY
          echo "| Total violations      | $TOTAL_VIOLATIONS |" >> $GITHUB_STEP_SUMMARY
          echo "| Files with violations | $FILES_WITH_VIOLATIONS |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Additional Information" >> $GITHUB_STEP_SUMMARY
          echo "Check the full [Checkstyle HTML report](${GITHUB_PAGES_URL}) for details." >> $GITHUB_STEP_SUMMARY
          
          echo "total_files=$TOTAL_FILES" >> $GITHUB_ENV
          echo "total_violations=$TOTAL_VIOLATIONS" >> $GITHUB_ENV
          echo "files_with_violations=$FILES_WITH_VIOLATIONS" >> $GITHUB_ENV

      - name: Send Slack notification on Checkstyle Failure
        if: failure()
        env:
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
            -H "Authorization: Bearer $SLACK_API_TOKEN" \
            --data '{
              "channel": "'"$SLACK_CHANNEL_ID"'",
              "text": "❗ Checkstyle 실행에 실패했습니다. 워크플로우 설정 또는 환경 구성을 확인하세요.",
              "attachments": [
                {
                  "color": "#ff0000",
                  "fields": [
                    { "title": "Repository", "value": "${{ github.repository }}", "short": true },
                    { "title": "Branch", "value": "${{ github.ref }}", "short": true },
                    { "title": "Commit Message", "value": "${{ github.event.head_commit.message }}", "short": false },
                    { "title": "Actions URL", "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}", "short": false }
                  ]
                }
              ]
            }' https://slack.com/api/chat.postMessage

      - name: Send Slack notification with success message and Artifact Link
        if: success()
        env:
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          TOTAL_FILES: ${{ env.total_files }}
          TOTAL_VIOLATIONS: ${{ env.total_violations }}
          FILES_WITH_VIOLATIONS: ${{ env.files_with_violations }}
        run: |
          ACTIONS_RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          curl -X POST -H 'Content-type: application/json' \
            -H "Authorization: Bearer $SLACK_API_TOKEN" \
            --data '{
              "channel": "'"$SLACK_CHANNEL_ID"'",
              "text": "✅ Checkstyle 실행에 성공하였습니다. 결과 파일을 확인하세요.",
              "attachments": [
                {
                  "color": "#36a64f",
                  "fields": [
                    { "title": "Repository", "value": "${{ github.repository }}", "short": true },
                    { "title": "Branch", "value": "${{ github.ref }}", "short": true },
                    { "title": "Commit Message", "value": "${{ github.event.head_commit.message }}", "short": false },
                    { "title": "Actions URL", "value": "'"$ACTIONS_RUN_URL"'", "short": false }
                  ]
                },
                {
                  "color": "#36a64f",
                  "fields": [
                    { "title": "Total files checked", "value": "'"$TOTAL_FILES"'", "short": true },
                    { "title": "Total violations", "value": "'"$TOTAL_VIOLATIONS"'", "short": true },
                    { "title": "Files with violations", "value": "'"$FILES_WITH_VIOLATIONS"'", "short": true }
                  ]
                }
              ],
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "업로드된 Checkstyle 결과 파일을 보려면 <"$ACTIONS_RUN_URL"|여기>를 클릭하세요. GitHub Actions 페이지에서 다운로드할 수 있습니다."
                  }
                }
              ]
            }' https://slack.com/api/chat.postMessage