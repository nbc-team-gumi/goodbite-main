name: Java Lint Check

on:
  pull_request:
    types: [opened, synchronize, reopened] # 처음 생성시점(opened), 커밋 추가/변경 시점(synchronize), 닫힌 PR 재오픈 시점(reopened)
    branches:
      - main
      - dev

jobs:
  lint:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Install dependencies
        run: ./gradlew build -x test

      - name: Run Checkstyle
        id: checkstyle
        continue-on-error: true
        run: ./gradlew checkstyleMain

      - name: Send Slack notification on Checkstyle Failure
        if: failure()
        env:
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
            -H "Authorization: Bearer $SLACK_API_TOKEN" \
            --data '{
              "channel": "'"$SLACK_CHANNEL_ID"'",
              "text": "❗ Checkstyle 실행에 실패했습니다. 워크플로우 설정 또는 환경 구성을 확인하세요.",
              "attachments": [
                {
                  "color": "#ff0000",
                  "fields": [
                    { "title": "Repository", "value": "${{ github.repository }}", "short": true },
                    { "title": "Branch", "value": "${{ github.ref }}", "short": true },
                    { "title": "Commit Message", "value": "${{ github.event.head_commit.message }}", "short": false },
                    { "title": "Actions URL", "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}", "short": false }
                  ]
                }
              ]
            }' https://slack.com/api/chat.postMessage

      - name: Get Upload URL from Slack
        if: success()
        id: get_upload_url
        env:
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
        run: |
          FILE_SIZE=$(stat -c%s "build/reports/checkstyle/goodbite-checkstyle-result.xml")
          response=$(curl -s -X POST \
            -H "Authorization: Bearer $SLACK_API_TOKEN" \
            -H "Content-Type: application/json; charset=utf-8" \
            -d '{
                  "filename": "goodbite-checkstyle-result.xml",
                  "length": '"$FILE_SIZE"'
                }' \
            https://slack.com/api/files.getUploadURLExternal)
          echo "Slack API response: $response"
          echo "::set-output name=upload_url::$(echo $response | jq -r '.file.upload_url')"
          echo "::set-output name=file_id::$(echo $response | jq -r '.file.id')"

      - name: Upload Checkstyle result to Slack URL
        if: success()
        env:
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
        run: |
          curl -X POST "${{ steps.get_upload_url.outputs.upload_url }}" \
          -F file=@build/reports/checkstyle/goodbite-checkstyle-result.xml \
          -H "Authorization: Bearer $SLACK_API_TOKEN"

      - name: Complete Upload in Slack
        if: success()
        env:
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
        run: |
          curl -s -X POST \
          -H "Authorization: Bearer $SLACK_API_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{
                "file_id": "${{ steps.get_upload_url.outputs.file_id }}"
              }' \
          https://slack.com/api/files.completeUploadExternal

      - name: Send Slack notification with success message
        if: success()
        env:
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
            -H "Authorization: Bearer $SLACK_API_TOKEN" \
            --data '{
              "channel": "'"$SLACK_CHANNEL_ID"'",
              "text": "✅ Checkstyle 실행에 성공하였습니다. 결과 파일을 확인하세요.",
              "attachments": [
                {
                  "color": "#36a64f",
                  "fields": [
                    { "title": "Repository", "value": "${{ github.repository }}", "short": true },
                    { "title": "Branch", "value": "${{ github.ref }}", "short": true },
                    { "title": "Commit Message", "value": "${{ github.event.head_commit.message }}", "short": false },
                    { "title": "Actions URL", "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}", "short": false }
                  ]
                }
              ]
            }' https://slack.com/api/chat.postMessage